openapi: 3.0.3
info:
  contact:
    email: fitiflaguin@gmail.com
  description: This API does things
  license:
    name: MIT
    url: https://choosealicense.com/licenses/mit/
  termsOfService: http://swagger.io/terms/
  title: Fiti Flaguin - OpenAPI 3.0
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://localhost:5000/api/v1
tags:
- description: Everything about your Phrase
  name: phrases
paths:
  /phrases:
    get:
      description: Returns a list of phrases
      operationId: getPhrases
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Phrase'
                type: array
          description: successful operation
      security:
      - bearerAuth:
        - read:phrase
      summary: Returns phrases
      tags:
      - phrases
  /phrases/{phraseId}:
    delete:
      operationId: deletePhraseByID
      parameters:
      - description: ID of the order that needs to be deleted
        explode: false
        in: path
        name: phraseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: successful operation
      security:
      - bearerAuth:
        - read:phrase
        - write:phrase
      summary: Delete phrase order by ID
      tags:
      - phrases
    get:
      operationId: getPhraseById
      parameters:
      - description: ID of order that needs to be fetched
        explode: false
        in: path
        name: phraseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
      security:
      - bearerAuth:
        - read:phrase
      summary: Find phrase order by ID
      tags:
      - phrases
    put:
      operationId: createPhraseByID
      parameters:
      - description: ID of order that needs to be fetched
        explode: false
        in: path
        name: phraseId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Phrase'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
      security:
      - bearerAuth:
        - read:phrase
        - write:phrase
      summary: Create a phrase with given ID
      tags:
      - phrases
components:
  requestBodies:
    Phrase:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Phrase'
      description: Phrase object
  schemas:
    Phrase:
      example:
        owner: owner
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: b06b68a9-b8f2-4004-9f77-a5ed9771310f
        content: Content
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: b06b68a9-b8f2-4004-9f77-a5ed9771310f
          format: uuid
          type: string
        content:
          example: Content
          type: string
        owner:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

