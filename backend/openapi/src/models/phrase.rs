/*
 * Fiti Flaguin - OpenAPI 3.0
 *
 * This API does things
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: fitiflaguin@gmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Phrase {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
}

impl Phrase {
    pub fn new() -> Phrase {
        Phrase {
            id: None,
            content: None,
            owner: None,
            created_at: None,
            updated_at: None,
        }
    }
}


